--------------------------------lab-2----------------------------------------
-- Create Department Table 

CREATE TABLE Department ( 
DepartmentID INT PRIMARY KEY, 
DepartmentName VARCHAR(100) NOT NULL UNIQUE 
); 

-- Create Designation Table 

CREATE TABLE Designation ( 
DesignationID INT PRIMARY KEY, 
DesignationName VARCHAR(100) NOT NULL UNIQUE 
); 

-- Create Person Table 

CREATE TABLE Person ( 
PersonID INT PRIMARY KEY IDENTITY(101,1), 
FirstName VARCHAR(100) NOT NULL, 
LastName VARCHAR(100) NOT NULL, 
Salary DECIMAL(8, 2) NOT NULL, 
JoiningDate DATETIME NOT NULL, 
DepartmentID INT NULL, 
DesignationID INT NULL, 
FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID), 
FOREIGN KEY (DesignationID) REFERENCES Designation(DesignationID) 
); 


---------------------PART-A--------------------------
--1. Department, Designation & Person Table’s INSERT, UPDATE & DELETE Procedures.

------DEPARTMENT TABLE---------
CREATE OR ALTER PROCEDURE PR_DEPARTMENT_INSERT
	@deptId int ,
	@deptName varchar(100)
AS
BEGIN
	INSERT INTO DEPARTMENT
	VALUES (
		@deptId,@deptName)
END
---------------
EXEC PR_DEPARTMENT_INSERT 1,'ADMIN'
EXEC PR_DEPARTMENT_INSERT 2,'IT'
EXEC PR_DEPARTMENT_INSERT 3,'HR'
EXEC PR_DEPARTMENT_INSERT 4,'ACCOUNT'

SELECT * FROM Department

------------------
CREATE OR ALTER PROCEDURE PR_DEPARTMENT_UPDATE
	@deptId int ,
	@deptName varchar(100)
AS
BEGIN
	UPDATE Department
	SET DepartmentName=@deptName
	WHERE DepartmentiD=@deptId
END

-----
CREATE OR ALTER PROC PR_DEPARTMENT_DELETE
	@deptId int 
AS
BEGIN
	DELETE FROM DEPARTMENT
	WHERE DEPARTMENTID=@deptId
END

----------------DESIGNATION TABLE-------------------
CREATE OR ALTER PROC PR_DESIGNATION_INSERT
	@desId int ,
	@desName varchar(100)
AS
BEGIN
	INSERT INTO DESIGNATION
	VALUES (
		@desId,@desName)
END

-----
EXEC PR_DESIGNATION_INSERT 11,'JOBBER'
EXEC PR_DESIGNATION_INSERT 12,'WELDER'
EXEC PR_DESIGNATION_INSERT 13,'CLERK'
EXEC PR_DESIGNATION_INSERT 14,'MANAGER'
EXEC PR_DESIGNATION_INSERT 15,'CEO'

SELECT * FROM DESIGNATION

CREATE OR ALTER PROC PR_DESIGNATION_UPDATE
	@desId int ,
	@desName varchar(100)
AS
BEGIN
	UPDATE DESIGNATION
	SET DesignationName=@desName
	WHERE DesignationID=@desId
END

------
CREATE OR ALTER PROC PR_DESIGNATION_DELETE
	@desId int
AS
BEGIN
	DELETE FROM DESIGNATION
	WHERE DesignationID=@desId
END

---------------PERSON TABLE------------------

CREATE OR ALTER PROC PR_PERSON_INSERT
	@FIRSTNAME VARCHAR(50),
	@LASTNAME VARCHAR(50),
	@SALARY DECIMAL(8,2),
	@JOININGDATE DATETIME,
	@DEPARTMENTID INT,
	@DESIGNATIONID INT
AS
BEGIN
	INSERT INTO Person
	VALUES (
		@FIRSTNAME,@LASTNAME,@SALARY,@JOININGDATE,
		@DEPARTMENTID,@DESIGNATIONID
		)
END

EXEC PR_PERSON_INSERT 'RAHUL','ANSHU',56000,'1990-01-01',1,12
EXEC PR_PERSON_INSERT 'HARDIK','HINSU',18000,'1990-09-25',2,11
EXEC PR_PERSON_INSERT 'BHAVIN','KAMANI',25000,'1991-05-14',NULL,11
EXEC PR_PERSON_INSERT 'BHOOMI','PATEL',39000,'2014-02-20',1,13
EXEC PR_PERSON_INSERT 'ROHIT','RAJOGOR',17000,'1990-07-23',2,15
EXEC PR_PERSON_INSERT 'PRIYA','MEHTA',25000,'1990-10-18',2,NULL
EXEC PR_PERSON_INSERT 'NEHA','TRIVEDI',18000,'2014-02-20',3,15

SELECT * FROM PERSON
----
CREATE OR ALTER PROC PR_PERSON_UPDATE
	@PERSONID INT,
	@FIRSTNAME VARCHAR(50),
	@LASTNAME VARCHAR(50),
	@SALARY DECIMAL(8,2),
	@JOININGDATE DATETIME,
	@DEPARTMENTID INT,
	@DesignationID INT
AS
BEGIN
	UPDATE Person
	SET FirstName=@FIRSTNAME,
		LASTNAME=@LASTNAME,
		SALARY=@SALARY,
		JOININGDATE=@JOININGDATE,
		DEPARTMENTID=@DEPARTMENTID,
		DesignationID=@DesignationID
	WHERE PERSONID=@PERSONID
END

-------
CREATE OR ALTER PROC PR_PERSON_DELETE
	@PERSONID INT
AS
BEGIN
	DELETE FROM PERSON
	WHERE PERSONID=@PERSONID
END

--2. Department, Designation & Person Table’s SELECTBYPRIMARYKEY 
CREATE OR ALTER PROCEDURE PR_DEPARTMENT_SELECTBYPRIMARYKEY
	@deptId int
AS
BEGIN
	SELECT * FROM DEPARTMENT
	WHERE DepartmentID=@deptId
END
------------
CREATE OR ALTER PROCEDURE PR_DESIGNATION_SELECTBYPRIMARYKEY
	@deSId int
AS
BEGIN
	SELECT * FROM Designation
	WHERE DESIGNATIONID=@deSId
END
-------
CREATE OR ALTER PROCEDURE PR_PERSON_SELECTBYPRIMARYKEY
	@PERSONId int
AS
BEGIN
	SELECT * FROM PERSON
	WHERE PERSONID=@PERSONId
END

EXEC PR_DEPARTMENT_SELECTBYPRIMARYKEY 1
EXEC PR_DESIGNATION_SELECTBYPRIMARYKEY 11
EXEC PR_PERSON_SELECTBYPRIMARYKEY 101


--3. Department, Designation & Person Table’s (If foreign key is available then do write join and take 
--columns on select list) 

CREATE OR ALTER PROCEDURE PR_DEPARTMENT_DISPLAY
AS
BEGIN
	SELECT * FROM Department
END


CREATE OR ALTER PROCEDURE PR_DESIGNATION_DISPLAY
AS
BEGIN
	SELECT * FROM Designation
END

CREATE OR ALTER PROCEDURE PR_PERSON_DISPLAY
AS
BEGIN
	SELECT P.PERSONID,
			P.FIRSTNAME,
			P.LASTNAME,
			P.SALARY,
			P.JOININGDATE,
			P.DEPARTMENTID,
			P.DESIGNATIONID
	FROM PERSON P
	JOIN Department DEPT
	ON P.DepartmentID=DEPT.DepartmentID
	JOIN DESIGNATION DES
	ON P.DESIGNATIONID=DES.DesignationID
END

EXEC PR_DEPARTMENT_DISPLAY
EXEC PR_DESIGNATION_DISPLAY
EXEC PR_PERSON_DISPLAY

--4. Create a Procedure that shows details of the first 3 persons.
CREATE OR ALTER PROCEDURE PR_PERSON_TOP_3
AS
BEGIN
	SELECT TOP 3 P.PERSONID,
			P.FIRSTNAME,
			P.LASTNAME,
			P.SALARY,
			P.JOININGDATE,
			P.DEPARTMENTID,
			P.DESIGNATIONID FROM PERSON P
	JOIN Department DEPT
	ON P.DepartmentID=DEPT.DepartmentID
	JOIN Designation DES
	ON P.DESIGNATIONID=DES.DesignationID
END

EXEC PR_PERSON_TOP_3



------------------------------------PART-B----------------------------------
--5. Create a Procedure that takes the department name as input and returns a table with all workers 
--working in that department. 
CREATE OR ALTER PROCEDURE PR_GETALL_WORKERS
@DEPTNAME VARCHAR(100)
AS
BEGIN
	SELECT P.FIRSTNAME FROM PERSON P
	JOIN Department D
	ON P.DEPARTMENTID=D.DepartmentID
	WHERE D.DEPARTMENTNAME=@DEPTNAME
END

EXEC PR_GETALL_WORKERS 'IT'


--6. Create Procedure that takes department name & designation name as input and 
--returns a table with worker’s first name, salary, joining date & department name.
CREATE OR ALTER PROCEDURE PR_DEPT_NAMESALARY
	@DEPTNAME VARCHAR(50),@DESNAME VARCHAR(50)
AS
BEGIN
	SELECT P.FIRSTNAME,P.SALARY,P.JOININGDATE,DEPT.DEPARTMENTNAME
	FROM PERSON P 
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DEPARTMENTID
	JOIN DESIGNATION DES
	ON P.DESIGNATIONID=DES.DesignationID
	WHERE DEPT.DepartmentName=@DEPTNAME AND DES.DESIGNATIONNAME=@DESNAME
END

EXEC PR_DEPT_NAMESALARY 'ADMIN','CLERK'


--7. Create a Procedure that takes the first name as an input parameter and display all the details of the 
--worker with their department & designation name. 
CREATE OR ALTER PROCEDURE PR_PERSON_DEPTNAME_DESNAME
	@FNAME VARCHAR(50)
AS
BEGIN SELECT P.PERSONID,
			P.FIRSTNAME,
			P.LASTNAME,
			P.SALARY,
			P.JOININGDATE,
			DEPT.DEPARTMENTNAME,
			DES.DESIGNATIONNAME
	FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DEPARTMENTID
	JOIN DESIGNATION DES
	ON P.DESIGNATIONID=DES.DESIGNATIONID
	WHERE P.FIRSTNAME=@FNAME
END


EXEC PR_PERSON_DEPTNAME_DESNAME 'HARDIK'
EXEC PR_PERSON_DEPTNAME_DESNAME 'RAHUL'


--8. Create Procedure which displays department wise maximum, minimum & total salaries.

CREATE OR ALTER PROCEDURE PR_DEPT_MAXMIN_SALARY
AS
BEGIN
	SELECT DEPT.DEPARTMENTNAME,
			MAX(P.SALARY) AS MAX_SALARY,
			MIN(P.SALARY) AS MIN_SALARY,
			SUM(P.SALARY) AS TOTAL_SALARY
	FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DepartmentID
	GROUP BY DEPT.DepartmentName
END

EXEC PR_DEPT_MAXMIN_SALARY 

--9. Create Procedure which displays designation wise average & total salaries.
CREATE OR ALTER PROCEDURE PR_DES_AVGTOTAL_SALARY
AS
BEGIN
	SELECT DES.DesignationName,
			MAX(P.SALARY) AS MAX_SALARY,
			MIN(P.SALARY) AS MIN_SALARY
	FROM PERSON P
	JOIN DESIGNATION DES
	ON P.DesignationID=DES.DesignationID
	GROUP BY DES.DesignationNAME
END

EXEC PR_DES_AVGTOTAL_SALARY

-----------------------PART-C----------------------------------
--10. Create Procedure that Accepts Department Name and Returns Person Count. 
CREATE OR ALTER PROCEDURE PR_DEPT_PERSON_COUNT
	@DEPTNAME varchar(50)
AS
BEGIN
	SELECT COUNT(P.PERSONID) AS COUNT_OF_PERSON
	FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DepartmentID
	WHERE DEPT.DEPARTMENTNAME=@DEPTNAME
	GROUP BY DEPT.DEPARTMENTNAME
end

exec PR_DEPT_PERSON_COUNT 'IT'

--11. Create a procedure that takes a salary value as input and returns all workers with a salary greater than 
--input salary value along with their department and designation details. 
CREATE OR ALTER PROCEDURE PR_WORKERS_MORE_SALARY
	@SALARY DECIMAL(8,2)
AS
BEGIN
	 SELECT P.PERSONID,
			P.FIRSTNAME,
			P.LASTNAME,
			P.SALARY,
			P.JOININGDATE,
			DEPT.DEPARTMENTNAME,
			DES.DESIGNATIONNAME
	FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DEPARTMENTID
	JOIN DESIGNATION DES
	ON P.DESIGNATIONID=DES.DESIGNATIONID
	WHERE P.SALARY > @SALARY
END

EXEC PR_WORKERS_MORE_SALARY 20000

--12. Create a procedure to find the department(s) with the highest total salary among all departments. 
------------------------------NOT WORKING------------------------------
CREATE OR ALTER PROCEDURE PR_DEPT_HIGHEST_TOTAL_SALARY
AS
BEGIN
	SELECT MAX(TOTAL_SALARY) AS HIGHEST_TOTAL_SALARY
	FROM (
	SELECT SUM(P.SALARY) FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DEPARTMENTID
	GROUP BY DEPT.DEPARTMENTID) AS TOTAL_SALARY
END

EXEC PR_DEPT_HIGHEST_TOTAL_SALARY

--13. Create a procedure that takes a designation name as input and returns a list of all workers under that 
--designation who joined within the last 10 years, along with their department. 

CREATE OR ALTER PROCEDURE PR_DES_JOINED_LAST10YEAR
	@DESNAME VARCHAR(50)
AS
BEGIN
	SELECT
			P.FIRSTNAME
	FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DEPARTMENTID
	JOIN DESIGNATION DES
	ON P.DESIGNATIONID=DES.DESIGNATIONID
	WHERE DES.DesignationName=@DESNAME AND YEAR(P.JOININGDATE) >= 2014
END

EXEC PR_DES_JOINED_LAST10YEAR 'CEO'

--14. Create a procedure to list the number of workers in each department who do not have a designation 
--assigned. 
CREATE OR ALTER PROCEDURE PR_WORKERS_NOTHAVE_DES
AS
BEGIN
	SELECT dept.DepartmentID,
			DEPT.DEPARTMENTNAME,
			count(p.personid) as worker_count
			FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DEPARTMENTID
	WHERE P.DesignationID IS NULL
	GROUP BY dept.DepartmentID,DEPT.DEPARTMENTNAME
END

EXEC PR_WORKERS_NOTHAVE_DES

--15. Create a procedure to retrieve the details of workers in departments where the average salary is above 12000.

CREATE OR ALTER PROCEDURE PR_PERSON_AVGSALARY_ABOVE_12000
AS
BEGIN
	SELECT	P.FIRSTNAME,
			P.LASTNAME,
			P.SALARY,
			P.JOININGDATE,
			DEPT.DEPARTMENTNAME
	FROM PERSON P
	JOIN DEPARTMENT DEPT
	ON P.DEPARTMENTID=DEPT.DEPARTMENTID
	WHERE P.DEPARTMENTID IN (
		SELECT p.DepartmentID
        FROM Person p
        GROUP BY p.DepartmentID
        HAVING AVG(p.Salary) > 12000
	)
END

EXEC PR_PERSON_AVGSALARY_ABOVE_12000